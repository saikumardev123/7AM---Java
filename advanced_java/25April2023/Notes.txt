Servlet Life Cycle:

As part of servlet life cycle, we have 3 methods.

1. init (called only once when the servlet is about to initialize)
2. service (called for every request)
3. destroy (called only once when the application is undeployed)

init: 

we should write the code such as opening a file, connecting to a database 
etc.

service: actual logic of the application 

destroy: we should write code such as closing a file, disconnecting 
to a database etc. 

Generic Servlet: 

Generic Servlet is a predefined class that implements Servlet interface, 
hence we can extends GenericServlet so that we dont have to provide the 
implementation for all the methods.

package com.secondapp;

import java.io.IOException;

import javax.servlet.GenericServlet;
import javax.servlet.Servlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebServlet;

/**
 * Servlet implementation class SecondServlet
 */

public class SecondServlet extends GenericServlet {

    /**
     * Default constructor. 
     */
    public SecondServlet() {
        // TODO Auto-generated constructor stub
    }

	@Override
	public void service(ServletRequest arg0, ServletResponse arg1) throws ServletException, IOException {
		// TODO Auto-generated method stub
		
		System.out.println("Service method called");
		
		
		
	}

}


GenericServlet works with all protocols. 

HttpServlet is introducted which inherits GenericServlet and provides 
the http specific methods and also generic methods.

package com.thirdapp;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class ThirdServlet extends HttpServlet {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// TODO Auto-generated method stub
		PrintWriter out =  resp.getWriter();
		
		out.print("<html><body> <h1>This response is from HTTP Servlet</h1> <input type='text' placeholder='username here'></body></html>");
		
	}
	
}


HttpServletRequest and HttpServletResponse:


HttpServletRequest resembles http request object which means any 
request data of a http request is gathered in HttpServletRequest object. 


HttpServletResponse object is used to provide the response to the client. 

response object contains the methods that are used to provide response to the user. 


Problem Statement: 

Implement a login system using servlets. 


Login.java:
package com.authenticate;


import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


public class Login extends HttpServlet {
	private static final long serialVersionUID = 1L;

    /**
     * Default constructor. 
     */
    public Login() {
        // TODO Auto-generated constructor stub
    }
    
      @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    	     
                PrintWriter out = resp.getWriter();
                out.print("<html>\n" + 
                		"<body>\n" + 
                		"<form action=\"./login\" method=\"post\">\n" + 
                		"    <label for=\"uname\"><b>Username</b></label>\n" + 
                		"    <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required>\n" + 
                		"\n" + 
                		"    <label for=\"psw\"><b>Password</b></label>\n" + 
                		"    <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n" + 
                		"\n" + 
                		"    <button type=\"submit\">Login</button>\n" + 
                		"  </div>\n" + 
                		"</form>\n" + 
                		"</body>\n" + 
                		"</html>");
    }
    
     @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    	 System.out.println("<h1>Post method called</h1>");
    	 
    	  String username =  req.getParameter("uname");
    	  String password = req.getParameter("psw");
    	  PrintWriter out = resp.getWriter();
    	  
    	  if(username.contentEquals("sai") && password.contentEquals("sai")) {
    		    out.print("<h1>Login Success! Redirecting to Dashboard");
    	  }
    	  else {
    		  out.print("<h1>Login Failure! Please try again!");
    	  }
    }

}



web.xml:

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  <servlet-name>login</servlet-name>
  <servlet-class>com.authenticate.Login</servlet-class>
  <init-param>
  <param-name>driver</param-name>
  <param-value>com.mysql.cj.Driver</param-value>
  </init-param>
  <init-param>
  <param-name>url</param-name>
  <param-value>jdbc:mysql://localhost:3306/ecommerce</param-value>
  </init-param>
    <init-param>
  <param-name>username</param-name>
  <param-value>root</param-value>
  </init-param>
    <init-param>
  <param-name>url</param-name>
  <param-value>xyz</param-value>
  </init-param>
  </servlet>
  
   <servlet-mapping>
   <servlet-name>login</servlet-name>
   <url-pattern>/login</url-pattern>
   </servlet-mapping>
  
</web-app>






